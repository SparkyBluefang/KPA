#!/bin/sh

# ***** BEGIN LICENSE BLOCK *****
# 
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
# 
# Copyright (C) 2011, 2013 Matthew Turnbull <sparky@bluefang-logic.com>. All Rights Reserved.
# 
# ***** END LICENSE BLOCK *****

TS=`date +%Y.%m.%d.%H`
VERSION=""
RELEASE=""
FORCE=""

usage() {
	echo "Options:"
	echo " -a --alpha   Alpha version bump"
	echo " -b --beta    Beta release"
	echo " -p --pre     Pre version bump"
	echo " -r --release Final release"
	echo " -f --force   Continue even with uncommitted changes (alpha/pre only)"
	echo " -h --help    Print this help message"
	echo ""
	echo "Version bumps will just modify the install.manifest and commit the changes. Releases will also modify the ChangeLog and tag the commit."
	exit $1
}

while [ -n "$1" ]; do
	case "$1" in
		-a|--alpha)
			VERSION="${TS}a"
			;;
		-b|--beta)
			VERSION="${TS}b"
			RELEASE="1"
			;;
		-p|--pre)
			VERSION="${TS}pre"
			;;
		-r|--release)
			VERSION="${TS}"
			RELEASE="1"
			;;
		-f|--force)
			FORCE="1"
			;;
		-h|--help)
			usage 0
			;;
		default)
			echo "Invalid action: '$1'"
			usage 1
			;;
	esac

	shift
done

if [ -z "$VERSION" ]; then
	usage 1
fi

# Check for uncommitted changes
CHANGES=`git diff HEAD --exit-code --name-only`
if [ $? -ne 0 ] && ( [ -n "$RELEASE" ] || [ -z "$FORCE" ] ); then
	echo "There are uncommitted changes:"
	echo "${CHANGES}"
	exit 1
fi

# Up the version
sed -i "/^version=/s/=.*$/=${VERSION}/g" install.manifest
git add install.manifest

if [ -n "${RELEASE}" ]; then
	# Update the ChangeLog
	sed -i "/^Version /s/ next$/ next\n\nVersion ${VERSION}/g" ChangeLog
	git add ChangeLog

	# Commit and tag the release
	git commit -m "Release ${VERSION}"
	git tag "${VERSION}"
else
	# Commit
	git commit -m "Version bump ${VERSION}"
fi

